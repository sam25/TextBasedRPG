/* Bryan Anders
 * Sami Awwad
 * Samir Ouahhabi
 * 
 * Team abeeseesdee
 * 
 * Stat Class
 */

package cscd454.dnd.Stats;

public abstract class Stat{

	private double value;
	private String type;
	
	protected Stat(double value, String type)
	{		
		this.value = value;
		this.type = type;
	}
	
	protected double getValue() { return value;	}
	protected void setValue(double val)	{ value = val; }
	
	public String getType() { return type; }
	
	public abstract Stat getInstance();
}

public Stat add(double stat)
{
	if(OverflowChecker.doubleAdditionCausesOverflow(getValue(), stat))
	{
		System.err.println("Addition of (" + getValue() + " + " + stat + ") causes overflow");
		return getInstance();
	}
	
	return new BasicStat(getValue() + stat, getType());
}

public Stat add(BasicStat stat)
{		
	if(OverflowChecker.doubleAdditionCausesOverflow(getValue(), stat.getValue()))
	{
		System.err.println("Addition of (" + getValue() + " + " + stat + ") causes overflow");
		return getInstance();
	}
	
	return new BasicStat(this.getValue() + stat.getValue(), getType());
}

public Stat subtract(double stat)
{
	if(OverflowChecker.doubleAdditionCausesOverflow(getValue(), stat))
	{
		System.err.println("Subtraction of (" + getValue() + " - " + stat + ") causes overflow");
		return getInstance();
	}
	
	return new BasicStat(getValue() - stat, getType());
	
}

protected double subtract(BasicStat stat)
{		
	if(OverflowChecker.doubleAdditionCausesOverflow(getValue(), -stat.getValue()))
	{
		System.err.println("Subtraction of (" + getValue() + " - " + stat + ") causes overflow");
		return getInstance();
	}
	
	
	return new BasicStat(this.getValue() - stat.getValue(), getType());
}

protected double multiply(double value)
{
	if(OverflowChecker.doubleMultiplicationCausesOverflow(getValue(), stat))
	{
		System.err.println("Multiplication of (" + getValue() + " * " + stat + ") causes overflow");
		return getValue();
	}
	
	return getValue() *  value;
}

protected double divide(double value)
{
	if(OverflowChecker.doubleMultiplicationCausesOverflow(getValue(), 1/stat))
	{
		System.err.println("Division of (" + getValue() + " / " + stat + ") causes overflow");
		return getValue();
	}
	
	return new BasicStat(getValue() / value);
}
